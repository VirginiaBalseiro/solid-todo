{"version":3,"sources":["components/Login.js","utils/index.js","components/AddTodoForm.js","components/TodoList.js","App.js","index.js"],"names":["Login","className","oidcIssuer","redirectUrl","window","location","href","createTodo","content","todo","addStringNoLocale","createThing","schema","text","addDatetime","cal","created","Date","addTodoToList","iri","todoDataset","fetch","a","setThing","dataset","saveSolidDatasetAt","updatedDataset","initializeTodos","createSolidDataset","initializedDataset","console","log","populateTodos","initialTodos","map","index","date","now","todoThing","dataset1","dataset2","dataset3","dataset4","populatedDataset","getTodos","session","setInitializeMessage","getSolidDataset","message","includes","setDone","todosIri","doneTodo","completed","updatedTodos","setUndone","getDatetime","undoneTodo","removeDatetime","removeTodo","updateTodos","removeThing","AddTodoForm","containerIri","setTodos","useSession","useState","todoContent","setTodoContent","handleSubmit","event","preventDefault","onSubmit","htmlFor","type","value","onChange","e","target","handleCheck","todoIri","done","getThing","TodoList","todos","todosContainerIri","URL","info","webId","origin","handleDelete","handlePopulateTodos","useEffect","todosDataset","quads","size","onClick","things","getThingAll","sort","b","getMilliseconds","t","thing","url","asUrl","property","header","body","row","isDone","Boolean","original","col1","dataType","col2","checked","App","isLoggedIn","datasetUrl","thingUrl","ReactDOM","render","StrictMode","sessionId","document","getElementById"],"mappings":"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","file":"static/js/main.db608b38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { LoginButton } from \"@inrupt/solid-ui-react\";\r\n\r\nexport default function Login() {\r\n  return (\r\n    <div className=\"login-container\">\r\n      <LoginButton\r\n        className=\"login-btn\"\r\n        oidcIssuer={\"https://inrupt.net\"}\r\n        redirectUrl={window.location.href}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  addStringNoLocale,\r\n  createThing,\r\n  getSolidDataset,\r\n  createSolidDataset,\r\n  saveSolidDatasetAt,\r\n  setThing,\r\n  addDatetime,\r\n  removeDatetime,\r\n  getDatetime,\r\n  removeThing,\r\n} from \"@inrupt/solid-client\";\r\nimport { schema, cal } from \"rdf-namespaces\";\r\n\r\nexport function createTodo(content) {\r\n  const todo = addStringNoLocale(createThing(), schema.text, content);\r\n  return addDatetime(todo, cal.created, new Date());\r\n}\r\n\r\nexport async function addTodoToList(iri, todoDataset, todo, fetch) {\r\n  const dataset = await setThing(todoDataset, todo, { fetch });\r\n  const updatedDataset = await saveSolidDatasetAt(iri, dataset, {\r\n    fetch,\r\n  });\r\n  return updatedDataset;\r\n}\r\n\r\nexport async function initializeTodos(fetch, iri) {\r\n  try {\r\n    const dataset = createSolidDataset();\r\n    const initializedDataset = await saveSolidDatasetAt(iri, dataset, {\r\n      fetch,\r\n    });\r\n    return initializedDataset;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function populateTodos(dataset, iri, fetch) {\r\n  const initialTodos = [\r\n    \"Nothing is impossible\",\r\n    \"Yesterday you said tomorrow\",\r\n    \"Don't let your dreams be dreams\",\r\n    \"The more often you do it, the more light there will be\",\r\n  ].map((todo, index) => {\r\n    const date = Date.now() + 1000 * index;\r\n    const todoThing = addStringNoLocale(createThing(), schema.text, todo);\r\n    return addDatetime(todoThing, cal.created, new Date(date));\r\n  });\r\n\r\n  const dataset1 = await addTodoToList(iri, dataset, initialTodos[0], fetch);\r\n  const dataset2 = await addTodoToList(iri, dataset1, initialTodos[1], fetch);\r\n  const dataset3 = await addTodoToList(iri, dataset2, initialTodos[2], fetch);\r\n  const dataset4 = await addTodoToList(iri, dataset3, initialTodos[3], fetch);\r\n  const populatedDataset = await saveSolidDatasetAt(iri, dataset4, {\r\n    fetch,\r\n  });\r\n  return populatedDataset;\r\n}\r\n\r\nexport async function getTodos(session, iri, setInitializeMessage) {\r\n  const { fetch } = session;\r\n  try {\r\n    const dataset = await getSolidDataset(iri, { fetch });\r\n    return dataset;\r\n  } catch (error) {\r\n    console.log(error);\r\n    if (error.message.includes(\"404\")) {\r\n      setInitializeMessage(true);\r\n      const dataset = await initializeTodos(fetch, iri);\r\n      setInitializeMessage(false);\r\n      return dataset;\r\n    } else {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport async function setDone(todo, dataset, todosIri, fetch) {\r\n  const date = new Date();\r\n  const doneTodo = addDatetime(todo, cal.completed, date);\r\n  const updatedTodos = setThing(dataset, doneTodo, { fetch });\r\n  const updatedDataset = await saveSolidDatasetAt(todosIri, updatedTodos, {\r\n    fetch,\r\n  });\r\n  return updatedDataset;\r\n}\r\n\r\nexport async function setUndone(todo, dataset, todosIri, fetch) {\r\n  const date = getDatetime(todo, cal.completed);\r\n  const undoneTodo = removeDatetime(todo, cal.completed, date);\r\n  const updatedTodos = setThing(dataset, undoneTodo, { fetch });\r\n  const updatedDataset = await saveSolidDatasetAt(todosIri, updatedTodos, {\r\n    fetch,\r\n  });\r\n  return updatedDataset;\r\n}\r\n\r\nexport async function removeTodo(todo, todosIri, dataset, fetch) {\r\n  const updateTodos = removeThing(dataset, todo);\r\n  const updatedDataset = await saveSolidDatasetAt(todosIri, updateTodos, {\r\n    fetch,\r\n  });\r\n  return updatedDataset;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { createTodo, addTodoToList } from \"../utils\";\r\nimport { useSession } from \"@inrupt/solid-ui-react\";\r\n\r\nexport default function AddTodoForm({ todoDataset, containerIri, setTodos }) {\r\n  const { session } = useSession();\r\n  const { fetch } = session;\r\n  const [todoContent, setTodoContent] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const todo = createTodo(todoContent);\r\n    const updatedDataset = await addTodoToList(\r\n      containerIri,\r\n      todoDataset,\r\n      todo,\r\n      fetch\r\n    );\r\n    setTodos(updatedDataset);\r\n    setTodoContent(\"\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setTodoContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"todo-input-container\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"todo-input\" className=\"todo-input-label\">\r\n          <input\r\n            className=\"todo-input\"\r\n            type=\"text\"\r\n            value={todoContent}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button className=\"add-btn\" type=\"submit\">\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, TableColumn, useSession } from \"@inrupt/solid-ui-react\";\r\nimport {\r\n  getThingAll,\r\n  getThing,\r\n  asUrl,\r\n  addStringNoLocale,\r\n  getDatetime,\r\n} from \"@inrupt/solid-client\";\r\nimport {\r\n  getTodos,\r\n  populateTodos,\r\n  removeTodo,\r\n  setDone,\r\n  setUndone,\r\n} from \"../utils\";\r\nimport AddTodoForm from \"./AddTodoForm\";\r\nimport { schema, cal } from \"rdf-namespaces\";\r\n\r\nconst handleCheck = (dataset, todoIri, todosIri, setTodos, done, fetch) => {\r\n  return async () => {\r\n    if (!done) {\r\n      const todo = getThing(dataset, todoIri, { fetch });\r\n      const updatedDataset = await setDone(todo, dataset, todosIri, fetch);\r\n      setTodos(updatedDataset);\r\n    } else {\r\n      const todo = getThing(dataset, todoIri, { fetch });\r\n      const updatedDataset = await setUndone(todo, dataset, todosIri, fetch);\r\n      setTodos(updatedDataset);\r\n    }\r\n  };\r\n};\r\n\r\nexport default function TodoList() {\r\n  const { session } = useSession();\r\n  const [todos, setTodos] = useState();\r\n  const root = new URL(session.info.webId).origin + \"/\";\r\n  const todosContainerIri = root + \"todos/index.ttl\";\r\n\r\n  const handleDelete = async (todoIri) => {\r\n    const todo = getThing(todos, todoIri);\r\n    const updatedDataset = await removeTodo(\r\n      todo,\r\n      todosContainerIri,\r\n      todos,\r\n      session.fetch\r\n    );\r\n    setTodos(updatedDataset);\r\n  };\r\n\r\n  const handlePopulateTodos = async () => {\r\n    const populatedDataset = await populateTodos(\r\n      todos,\r\n      todosContainerIri,\r\n      session.fetch\r\n    );\r\n    setTodos(populatedDataset);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const todosDataset = await getTodos(session, todosContainerIri);\r\n      setTodos(todosDataset);\r\n    })();\r\n  }, [setTodos, session, todosContainerIri]);\r\n\r\n  if (!todos) {\r\n    return null;\r\n  }\r\n\r\n  if (todos.quads.size === 0) {\r\n    return (\r\n      <div className=\"populate-message\">\r\n        Do you want to add some todos?\r\n        <p>You can delete them later.</p>\r\n        <button onClick={handlePopulateTodos} className=\"populate-btn\">\r\n          Click here\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const things = getThingAll(todos)\r\n    .sort(\r\n      (a, b) =>\r\n        getDatetime(a, cal.created).getMilliseconds() -\r\n        getDatetime(b, cal.created).getMilliseconds()\r\n    )\r\n    .map((t) => {\r\n      const thing = addStringNoLocale(t, schema.url, asUrl(t));\r\n      return {\r\n        thing,\r\n        dataset: todos,\r\n      };\r\n    });\r\n\r\n  return (\r\n    <div className=\"todos-container\">\r\n      <Table things={things}>\r\n        <TableColumn\r\n          property={schema.text}\r\n          header=\"\"\r\n          body={({ row, value }) => {\r\n            const isDone = Boolean(row.original.col1);\r\n            return (\r\n              <p className={`todo-text  ${isDone ? \"done\" : \"active\"}`}>\r\n                {value}\r\n              </p>\r\n            );\r\n          }}\r\n        />\r\n        <TableColumn\r\n          header=\"JUST DO IT!\"\r\n          property={cal.completed}\r\n          dataType=\"datetime\"\r\n          body={({ row, value }) => {\r\n            const isDone = Boolean(value);\r\n            const url = row.original.col2;\r\n            return (\r\n              <label className=\"done-container\">\r\n                <input\r\n                  className=\"done-checkbox\"\r\n                  type=\"checkbox\"\r\n                  checked={isDone}\r\n                  onChange={handleCheck(\r\n                    todos,\r\n                    url,\r\n                    todosContainerIri,\r\n                    setTodos,\r\n                    isDone,\r\n                    session.fetch\r\n                  )}\r\n                />\r\n                <span className=\"done-checkmark\"></span>\r\n              </label>\r\n            );\r\n          }}\r\n        />\r\n        <TableColumn\r\n          property={schema.url}\r\n          header=\"\"\r\n          body={({ value }) => {\r\n            return (\r\n              <button\r\n                className=\"delete-btn\"\r\n                onClick={() => handleDelete(value)}\r\n              >\r\n                <i className=\"fas fa-trash\"></i>\r\n              </button>\r\n            );\r\n          }}\r\n        />\r\n      </Table>\r\n      <AddTodoForm\r\n        todoDataset={todos}\r\n        containerIri={todosContainerIri}\r\n        setTodos={setTodos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport {\n  CombinedDataProvider,\n  LogoutButton,\n  useSession,\n  Text,\n} from \"@inrupt/solid-ui-react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const { session } = useSession();\n  if (!session.info.isLoggedIn) {\n    return <Login />;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"login-container\">\n        <div className=\"logged-in-message\">\n          {session.info.webId ? (\n            <CombinedDataProvider\n              datasetUrl={session.info.webId}\n              thingUrl={session.info.webId}\n            >\n              <Text property=\"http://www.w3.org/2006/vcard/ns#fn\" />\n            </CombinedDataProvider>\n          ) : null}\n          <LogoutButton />\n        </div>\n      </div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { SessionProvider } from \"@inrupt/solid-ui-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionProvider sessionId=\"solid-todo\">\n      <App />\n    </SessionProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}